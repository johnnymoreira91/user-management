<%- include('parts/header'); %>

  <div class="row">
    <div class="center">
      <h3>Api - User Management</h3>
    </div>
  </div>

  <div class="row">
    <div class="col">
      <table class="table">
        <thead>
          <tr>
            <th scope="col">Server</th>
            <th scope="col">Status</th>
            <th scope="col">Ping</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <th scope="row">Application</th>
            <td id="messages"></td>
            <td id="ping"></td>
          </tr>
          <tr>
            <th scope="row">Database</th>
            <td><span class="badge text-bg-success">Success</span></td>
          </tr>
          <tr>
            <th scope="row">Redis</th>
            <td><span class="badge text-bg-danger">Danger</span></td>
          </tr>
          <tr>
            <th scope="row">Node-Cache</th>
            <td><span class="badge text-bg-warning">Warning</span></td>
          </tr>
          <tr>
            <th scope="row">Kafka</th>
            <td><span class="badge text-bg-success">Success</span></td>
          </tr>
        </tbody>
      </table>
    </div>
    <div class="col">
      <div id="messages2">
        <!-- <span class="badge text-bg-danger">Offline</span> -->
      </div>
      <input type="text" id="d1" />
    </div>
  </div>

  <script src="/socket.io/socket.io.js"></script>
  <script>
    const sender = document.getElementById("d1")
    const socket = io();

    socket.on('msg', (data) => {
      console.log('ðŸ‘¾ New socket connected! >>', data.id)
      const divMsg = document.getElementById('messages2');
      if (divMsg) {
        divMsg.innerHTML = `<span class="badge text-bg-success">${JSON.parse(data)}</span>`
        socket.broadcast.emit('teste', data)
      }
      // const body = sender.addEventListener("input", () => { return document.getElementById("d1").value });
    })

    // setInterval(() => {
    //     socket.emit('teste', 'enviandooo')
    //   }, 3000);
    // socket.on('teste', (data) => {
    //   console.log('ðŸ‘¾ data>>', data)
    //   setInterval(() => {
    //     socket.emit
    //   }, 3000);
    // })

    // socket.emit('teste', 'ta ai o testeeee')

    socket.on('application', (data) => {
      const body = JSON.parse(data)
      const divMsg = document.getElementById('messages');
      const div = document.getElementById('ping');
      if (div) {
        let html
        if (div.innerHTML) {
          if (body > 40 && body < 50) {
            html = `<span class="badge text-bg-warning">${body}</span>`
            div.innerHTML = html
          } else if (body >= 50) {
            html = `<span class="badge text-bg-danger">${body}</span>`
            socket.emit('teste', 'enviandooo')
            // data.emit('teste', `Danger on ${new Date()}`)
            div.innerHTML = html
            // socket.on('connection', (data) => {
            //   // data.emit('ret', 'error')
            //   sender()
            // })
          } else {
            html = `<span class="badge text-bg-success">${body}</span>`
            div.innerHTML = html
          }
        } else {
          html = `<span class="badge text-bg-danger">Offline</span>`
          div.innerHTML = html
        }
      }

      if (divMsg) {
        let html
        if (divMsg.innerHTML) {
          if (body > 40 && body < 50) {
            html = `<span class="badge text-bg-warning">Warning</span>`
            divMsg.innerHTML = html
          } else if (body >= 50) {
            html = `<span class="badge text-bg-danger">Danger</span>`
            divMsg.innerHTML = html
          } else {
            html = `<span class="badge text-bg-success">Success</span>`
            divMsg.innerHTML = html
          }
        } else {
          html = `<span class="badge text-bg-danger">Offline</span>`
          divMsg.innerHTML = html
        }
      }

    })
    
  </script>

  <%- include('parts/footer'); %>